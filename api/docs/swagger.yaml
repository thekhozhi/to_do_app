definitions:
  models.CreateLabel:
    properties:
      color:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  models.CreateTask:
    properties:
      description:
        type: string
      due_date:
        type: string
      task_list_id:
        type: string
      title:
        type: string
    type: object
  models.CreateTaskList:
    properties:
      description:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  models.CreateUser:
    properties:
      email:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  models.Label:
    properties:
      color:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      due_date:
        type: string
      id:
        type: string
      task_list_id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.TaskList:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateLabel:
    properties:
      color:
        type: string
      name:
        type: string
    type: object
  models.UpdateResponse:
    properties:
      id:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateTask:
    properties:
      description:
        type: string
      due_date:
        type: string
      task_list_id:
        type: string
      title:
        type: string
    type: object
  models.UpdateTaskList:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.UpdateUser:
    properties:
      email:
        type: string
      user_name:
        type: string
    type: object
  models.UpdateUserPassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserLoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /label:
    post:
      consumes:
      - application/json
      description: create a new label
      parameters:
      - description: label
        in: body
        name: label
        schema:
          $ref: '#/definitions/models.CreateLabel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Label'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a new label
      tags:
      - label
  /label/{id}:
    delete:
      consumes:
      - application/json
      description: delete label
      parameters:
      - description: label_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete label
      tags:
      - label
    get:
      consumes:
      - application/json
      description: get label by id
      parameters:
      - description: label_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Label'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get label by id
      tags:
      - label
    put:
      consumes:
      - application/json
      description: update label
      parameters:
      - description: label_id
        in: path
        name: id
        required: true
        type: string
      - description: label
        in: body
        name: label
        schema:
          $ref: '#/definitions/models.UpdateLabel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update label
      tags:
      - label
  /task:
    post:
      consumes:
      - application/json
      description: create a new task
      parameters:
      - description: task
        in: body
        name: task
        schema:
          $ref: '#/definitions/models.CreateTask'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a new task
      tags:
      - task
  /task/{id}:
    delete:
      consumes:
      - application/json
      description: delete task
      parameters:
      - description: task_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete task
      tags:
      - task
    get:
      consumes:
      - application/json
      description: get task by id
      parameters:
      - description: task_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get task by id
      tags:
      - task
    put:
      consumes:
      - application/json
      description: update task
      parameters:
      - description: task_id
        in: path
        name: id
        required: true
        type: string
      - description: task
        in: body
        name: task
        schema:
          $ref: '#/definitions/models.UpdateTask'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update task
      tags:
      - task
  /task_list:
    post:
      consumes:
      - application/json
      description: create a new task list
      parameters:
      - description: task_list
        in: body
        name: task_list
        schema:
          $ref: '#/definitions/models.CreateTaskList'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TaskList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a new task list
      tags:
      - task_list
  /task_list/{id}:
    delete:
      consumes:
      - application/json
      description: delete task list
      parameters:
      - description: task_list_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete task list
      tags:
      - task_list
    get:
      consumes:
      - application/json
      description: get task list by id
      parameters:
      - description: task_list_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TaskList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get task list by id
      tags:
      - task_list
    put:
      consumes:
      - application/json
      description: update task list
      parameters:
      - description: task_list_id
        in: path
        name: id
        required: true
        type: string
      - description: task_list
        in: body
        name: task_list
        schema:
          $ref: '#/definitions/models.UpdateTaskList'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update task list
      tags:
      - task_list
  /user:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new user
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Change password
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.UpdateUserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Change password
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - user
  /user_login:
    post:
      consumes:
      - application/json
      description: User Login
      parameters:
      - description: login
        in: body
        name: login
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User Login
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
